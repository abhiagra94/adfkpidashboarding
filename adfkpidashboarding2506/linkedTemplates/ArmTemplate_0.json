{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfkpidashboarding2506"
		},
		"LS_sgkpidashboarding_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_sgkpidashboarding'"
		},
		"LS_sqldbkpidashboarding_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_sqldbkpidashboarding'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"LS_sgkpidashboarding_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sgkpidashboarding.dfs.core.windows.net/"
		},
		"LS_sqldbkpidashboarding_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlserverkpidashboarding.database.windows.net"
		},
		"LS_sqldbkpidashboarding_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldbkpidashboarding"
		},
		"LS_sqldbkpidashboarding_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cloud"
		},
		"SqlServer1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mycomputer"
		},
		"SqlServer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().database}"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cloud"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_sgkpidashboarding')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_sgkpidashboarding_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_sgkpidashboarding_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_sqldbkpidashboarding')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_sqldbkpidashboarding_properties_typeProperties_server')]",
					"database": "[parameters('LS_sqldbkpidashboarding_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_sqldbkpidashboarding_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_sqldbkpidashboarding_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"database": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sgkpidashboarding",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "departmenttest.csv",
						"folderPath": "sink",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sgkpidashboarding')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sgkpidashboarding",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourcecontainer": {
						"type": "string"
					},
					"sourcedatalake": {
						"type": "string"
					},
					"sourcefile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().sourcefile",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().sourcedatalake",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().sourcecontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sgkpidashboarding')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sqldatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sqldbkpidashboarding",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sqldatabase": {
						"type": "string"
					},
					"sqltablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().sqldatabase",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().sqltablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sqldbkpidashboarding')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Datalake_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy datalake to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_source",
								"type": "DatasetReference",
								"parameters": {
									"sourcecontainer": {
										"value": "@pipeline().parameters.sourcecontainer",
										"type": "Expression"
									},
									"sourcedatalake": {
										"value": "@pipeline().parameters.sourcedatalake",
										"type": "Expression"
									},
									"sourcefile": {
										"value": "@pipeline().parameters.sourcefile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sqldatabase",
								"type": "DatasetReference",
								"parameters": {
									"sqldatabase": {
										"value": "@pipeline().parameters.sqldb",
										"type": "Expression"
									},
									"sqltablename": {
										"value": "@pipeline().parameters.sqltablename",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy datalake to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcecontainer": {
						"type": "string",
						"defaultValue": "landing"
					},
					"sourcedatalake": {
						"type": "string",
						"defaultValue": "folder"
					},
					"sourcefile": {
						"type": "string",
						"defaultValue": "Department.csv"
					},
					"sqldb": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"sqltablename": {
						"type": "string",
						"defaultValue": "departmentv2"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-18T14:17:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_source')]",
				"[concat(variables('factoryId'), '/datasets/DS_sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from dbo.metadata",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldatabase",
								"type": "DatasetReference",
								"parameters": {
									"sqldatabase": "dbo",
									"sqltablename": "metadata"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_source",
											"type": "DatasetReference",
											"parameters": {
												"sourcecontainer": {
													"value": "@item().Inputcontainer",
													"type": "Expression"
												},
												"sourcedatalake": {
													"value": "@item().Inputdirectory",
													"type": "Expression"
												},
												"sourcefile": {
													"value": "@item().Inputfile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_source",
											"type": "DatasetReference",
											"parameters": {
												"sourcecontainer": {
													"value": "@item().Outputcontainer",
													"type": "Expression"
												},
												"sourcedatalake": {
													"value": "@concat(formatDateTime(utcNow(),'dd_MM_yyyy'),'/',item().Outputdirectory)",
													"type": "Expression"
												},
												"sourcefile": {
													"value": "@item().Outputfile",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@concat('Truncate table ',item().sqldatabase,'.',item().sqltablename)",
												"type": "Expression"
											},
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_source",
											"type": "DatasetReference",
											"parameters": {
												"sourcecontainer": {
													"value": "@item().Outputcontainer",
													"type": "Expression"
												},
												"sourcedatalake": {
													"value": "@concat(formatDateTime(utcNow(),'dd_MM_yyyy'),'/',item().Outputdirectory)",
													"type": "Expression"
												},
												"sourcefile": {
													"value": "@item().Outputfile",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_sqldatabase",
											"type": "DatasetReference",
											"parameters": {
												"sqldatabase": {
													"value": "@item().sqldatabase",
													"type": "Expression"
												},
												"sqltablename": {
													"value": "@item().sqltablename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_source",
								"type": "DatasetReference",
								"parameters": {
									"sourcecontainer": "landing",
									"sourcedatalake": "Folder1",
									"sourcefile": "metadata.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sqldatabase",
								"type": "DatasetReference",
								"parameters": {
									"sqldatabase": "dbo",
									"sqltablename": "metadata"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_source')]",
				"[concat(variables('factoryId'), '/datasets/DS_sqldatabase')]"
			]
		}
	]
}